version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:10.15.3-browsers
    working_directory: ~/project/filharmonic-ui
  nodee2e:
    docker:
      - image: circleci/node:10.15.3-browsers
      - image: betagouv/filharmonic-api
        entrypoint: /bin/sh
        command: |
            -c "
            for i in `seq 1 20`;
            do
              nc -z localhost 5432 && echo Success && break
              echo -n .
              sleep 1
            done
            if [ $i -eq 10 ]; then
              echo Failed waiting for Postgres && exit 1
            fi
            filharmonic-api"
        environment:
          FILHARMONIC_MODE: test
      - image: circleci/postgres:11.1-alpine
        environment:
          POSTGRES_USER: filharmonic
          POSTGRES_PASS: filharmonic
          POSTGRES_DB: filharmonic
      - image: minio/minio:RELEASE.2019-01-23T23-18-58Z
        command: server /data
        environment:
          MINIO_ACCESS_KEY: filharmonic
          MINIO_SECRET_KEY: filharmonic
    working_directory: ~/project/filharmonic-ui

jobs:
  install-dependencies:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v4-cache-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v4-cache-
      - run: yarn install --frozen-lockfile
      - save_cache:
          key: v4-cache-{{ checksum "package.json" }}
          paths:
            - ~/.cache
      - persist_to_workspace:
          root: '~'
          paths:
            - .cache
            - project/filharmonic-ui/

  lint:
    executor: node
    steps:
      - attach_workspace:
          at: '~'
      - run:
          command: yarn run lint
          environment:
            NODE_ENV: production

  test-unit:
    executor: node
    steps:
      - attach_workspace:
          at: '~'
      - run: yarn run test:unit

  test-e2e:
    executor: nodee2e
    steps:
      - attach_workspace:
          at: '~'
      - run:
          name: Waiting for API to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5000 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for API && exit 1
      - run: yarn run test:e2e --headless
      - store_artifacts:
          path: tests/e2e/videos
      - store_artifacts:
          path: tests/e2e/screenshots

  check-outdated-dependencies:
    executor: node
    steps:
      - attach_workspace:
          at: '~'
      - run: yarn outdated

  check-vulnerabilities:
    executor: node
    steps:
      - attach_workspace:
          at: '~'
      # yarn can't ignore devDependencies https://github.com/yarnpkg/yarn/issues/6632
      - run: yarn audit || true

  build:
    executor: node
    steps:
      - attach_workspace:
          at: '~'
      - run: yarn run build
      - persist_to_workspace:
          root: '~'
          paths:
            - project/filharmonic-ui/dist

  build-docker:
    executor: node
    steps:
      - attach_workspace:
          at: '~'
      - setup_remote_docker
      - run: |
          if [[ -z "$DOCKERHUB_USER" || -z "$DOCKERHUB_PASSWORD" ]]; then
            echo "Missing DOCKERHUB_USER or DOCKERHUB_PASSWORD environment variables!"
            exit 1
          fi
          docker build -t betagouv/filharmonic-ui:$CIRCLE_SHA1 .

          echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USER --password-stdin
          docker push betagouv/filharmonic-ui:$CIRCLE_SHA1
          if [[ "$CIRCLE_BRANCH" = "master" ]]; then
            docker tag betagouv/filharmonic-ui:$CIRCLE_SHA1 betagouv/filharmonic-ui:latest
            docker push betagouv/filharmonic-ui:latest
          fi

workflows:
  weekly-dependency-check:
    triggers:
      - schedule:
          cron: "0 0 * * 0" # every sunday
          filters:
            branches:
              only:
                - master
    jobs:
      - install-dependencies:
          requires: []
      - check-outdated-dependencies:
          requires:
            - install-dependencies
      - check-vulnerabilities:
          requires:
            - install-dependencies
  commit:
    jobs:
      - install-dependencies:
          requires: []

      - lint:
          requires:
            - install-dependencies
      - test-unit:
          requires:
            - install-dependencies
      - test-e2e:
          requires:
            - install-dependencies
      - check-vulnerabilities:
          requires:
            - install-dependencies

      - build:
          requires:
            - lint
            - test-unit
            - test-e2e

      - build-docker:
          requires:
            - build
